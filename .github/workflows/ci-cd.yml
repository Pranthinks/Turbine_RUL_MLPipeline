# .github/workflows/mlops-pipeline.yml
name: MLOps Pipeline - Turbine RUL

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: self-hosted
    defaults:
      run:
        shell: cmd  # Keep your existing shell preference
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Stop existing containers
      run: |
        docker-compose down --remove-orphans
        docker container prune -f
      continue-on-error: true
    
    - name: Rebuild existing image with latest code
      run: |
        docker-compose build
        echo "Updated existing image: turbine_rul_mlpipeline-turbine-rul:latest"
        echo "Build SHA: ${{ github.sha }}"
    
    - name: Test container health
      run: |
        echo "Testing container health..."
        docker run --rm turbine_rul_mlpipeline-turbine-rul:latest python -c "import pandas, numpy, sklearn; print('‚úÖ Dependencies OK')"
    
    - name: Test pipeline imports
      run: |
        echo "Testing pipeline can start..."
        docker run --rm turbine_rul_mlpipeline-turbine-rul:latest python -c "import main; print('‚úÖ Pipeline loads OK')"
    
    - name: Test FastAPI imports
      run: |
        echo "Testing FastAPI can start..."
        docker run --rm turbine_rul_mlpipeline-turbine-rul:latest python -c "import fast_api; print('‚úÖ FastAPI loads OK')"
    
    - name: Run basic smoke test
      run: |
        echo "Running smoke test..."
        docker-compose run --rm turbine-rul python -c "
        try:
            import main
            print('‚úÖ Main module imports successfully')
            print('‚úÖ Container ready for Airflow')
        except Exception as e:
            print(f'‚ùå Error: {e}')
            exit(1)
        "

  deploy-and-integrate:
    needs: build-and-test
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main'
    defaults:
      run:
        shell: cmd
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Backup current image (optional)
      run: |
        echo "Creating backup of current image..."
        docker tag turbine_rul_mlpipeline-turbine-rul:latest turbine_rul_mlpipeline-turbine-rul:backup-${{ github.sha }}
        echo "Backup created: turbine_rul_mlpipeline-turbine-rul:backup-${{ github.sha }}"
    
    - name: Start FastAPI service
      run: |
        echo "Starting FastAPI service..."
        docker-compose up -d turbine-api
        timeout 30 >nul 2>&1 || ver >nul

    - name: Verify API service
      run: |
        echo "‚úÖ FastAPI available at: http://localhost:8000"
        docker-compose ps
    
    - name: Container ready for Airflow
      run: |
        echo "‚úÖ Container updated and ready for manual Airflow execution"
        echo "‚úÖ FastAPI service running at: http://localhost:8000"
        echo "Image: turbine_rul_mlpipeline-turbine-rul:latest"
        echo "SHA: ${{ github.sha }}"
        echo "You can now run your Airflow DAG manually"
    
    - name: Clean up old backup images
      run: |
        echo "Cleaning up old backup images..."
        docker image prune -f --filter "dangling=true"
        echo "Keeping last 3 backup versions..."
        for /f "skip=3 tokens=*" %%i in ('docker images turbine_rul_mlpipeline-turbine-rul --format "{{.ID}} {{.Tag}}" ^| findstr backup') do docker rmi turbine_rul_mlpipeline-turbine-rul:%%i
      continue-on-error: true
    
    - name: Create deployment summary
      run: |
        echo "=== Deployment Summary ===" > deployment_summary.txt
        echo "Build SHA: ${{ github.sha }}" >> deployment_summary.txt
        echo "Timestamp: %date% %time%" >> deployment_summary.txt
        echo "Image: turbine_rul_mlpipeline-turbine-rul:latest" >> deployment_summary.txt
        echo "FastAPI URL: http://localhost:8000" >> deployment_summary.txt
        echo "Status: Ready for manual Airflow execution" >> deployment_summary.txt
        type deployment_summary.txt
    
    - name: Save deployment artifacts
      uses: actions/upload-artifact@v4
      with:
        name: deployment-info-${{ github.sha }}
        path: deployment_summary.txt

  notify:
    needs: [build-and-test, deploy-and-integrate]
    runs-on: self-hosted
    if: always()
    
    steps:
    - name: Notify success
      if: needs.deploy-and-integrate.result == 'success'
      run: |
        echo "üöÄ MLOps Pipeline with FastAPI Updated Successfully!"
        echo "‚úÖ Image: turbine_rul_mlpipeline-turbine-rul:latest"
        echo "‚úÖ SHA: ${{ github.sha }}"
        echo "‚úÖ FastAPI: http://localhost:8000"
        echo "‚úÖ Ready for manual Airflow execution"
    
    - name: Notify failure
      if: failure()
      run: |
        echo "‚ùå MLOps Pipeline Update Failed!"
        echo "Check the logs above for details"